<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->

	<!-- AOP -->
	<!-- 스프링 AOP 자동프록시 설정 -->
	<aop:aspectj-autoproxy />
	<!-- aop는 asoectj문법을 쓰고, autoproxy 자동화시켰다. -->

	<!-- AOP XML 환경 설정(AOP 기능 설정 XML방식으로) -->
	<aop:config></aop:config>


	<!-- 스프링 jdbc -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="oracle.jdbc.OracleDriver" />
		<property name="url"
			value="jdbc:oracle:thin:@127.0.0.1:1521:xe" />
		<property name="username" value="two" />
		<property name="password" value="two" />
	</bean>

	<!-- 스프링 jdbc와 mybatis 연결, mybatis 환경설정 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 스프링에서 setter()메서드를 통한 의존성 주입 => DI (디펜던시 인서트??뭐드라 암튼 의존성) -->
		<property name="configLocation"
			value="classpath:/mybatis-config.xml" />
		<!-- STS에서 보이는 가상 경로 classpath는 src/main/resources 경로를 말한다. 이 경로의 mybatis-config.xml의 
			역할은 데이터 저장빈 클래스의 객체 별칭을 관리한다. -->

		<!-- mybatis 매퍼태그로 쿼리문을 다룸 -> 매퍼태그 경로 설정 -->
		<property name="mapperLocations"
			value="classpath:com/moving/mappers/*/*.xml" />
	</bean>


	<!-- 트랜잭션 -->
	<!-- 스프링을 통한 트랜잭션 매니저 설정 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 경로를 보면, 이건 스프링쪽임! mybatis꺼 쓰는 것이 아니라 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 스프링의 setter() DI(의존성 주입) -->
	</bean>

	<tx:annotation-driven />
	<!-- 트랜잭션 설정 애노테이션 @Transactional 애노테이션을 이용한 트랜잭션 관리를 가능하게 해줌. -->


	<!-- mybatis 쿼리문 수행객체 설정 -->
	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<constructor-arg name="sqlSessionFactory"
			ref="sqlSessionFactory" />
		<!-- 생성자를 통한 의존성 주입 -->
	</bean>

	<!-- Model DAOImpl의 @Repository 애노테이션이 설정된 부분을 자동스캔(찾아서) 스프링에 등록한다. -->
	<context:component-scan
		base-package="com.moving.dao" />

	<!-- 서비스 추가 목적) 1. 서비스 AOP를 통한 트랜잭션 적용 -> 데이터 일관성과 사이트 신뢰도 유지 2. 고객의 추가 
		요구 상황을 반영 3. 컨트롤러와 모델DAO를 연결하는 중간 매개체 역할 -->
	<context:component-scan
		base-package="com.moving.service" />
</beans>
