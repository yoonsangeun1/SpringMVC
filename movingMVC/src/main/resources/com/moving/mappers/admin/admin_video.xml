<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="adminVideo"><!-- 매퍼 네임스페이스명 -->
	<!-- videoPost resultMap -->
	<resultMap type="videoPostVO" id="videoPostInfo">
		<association property="mUserVO" javaType="com.moving.domain.MUserVO" 
		column="user_id" select="selectVideoAuthor" />
		<!-- 1:1 매핑 실행 결과. property는 자바 변수명, javaType은 자바 변수 객체 경로, 
		select는 변수에 담을 값을 검색하는 메서드, column은 select를 실행할 때 필요한 컬럼 값 
		=> project_post의 user_id값을 기준으로 m_user테이블에서 유저 정보를 불러와 MUserVO타입 mUserVO 변수에 저장-->
		<collection property="attachedFileVO" 
			javaType="java.util.List" autoMapping="true"
			column="project_post_id" ofType="AttachedFileVO"
			select="selectVideoAttachedFile"/>
	</resultMap>
	
	<!-- 영상 첨부파일(사진) 불러오기 -->
	<select id="selectVideoAttachedFile" resultType="attachedFileVO">
		SELECT * FROM ATTACHED_FILE 
		WHERE VIDEO_POST_ID = #{id} 
		ORDER BY NO ASC
	</select>
	
	<!-- 조회수 증가 -->
	<update id="updateHit">
		UPDATE VIDEO_POST SET HIT = HIT + 1 WHERE ID = #{id}
	</update>
	
	<!-- 작성자 정보 불러오기 -->
	<select id="selectVideoAuthor" resultType="mUserVO">
		SELECT * FROM M_USER
		WHERE ID = #{user_id}
	</select>
	
	<!-- 영상 게시글 불러오기 -->
	<select id="selectVideoPost" resultType="videoPostVO">
		SELECT * FROM VIDEO_POST
		WHERE ID = #{id}
	</select>
	
	<!-- 영상 정보 +첨부파일+작성자+댓글 다 불러오기 -->
	<select id="selectVideoInfo" resultMap="videoPostInfo">
		SELECT * FROM VIDEO_POST
		WHERE ID = #{id}
	</select>
	
	<!-- 티저 게시글 작성 -->
	<insert id="insertTeaserVideo">
		INSERT INTO VIDEO_POST (id, code_no, user_id, title_english, title_korean,
		director, release_date, content, video_file_path, rate)
		VALUES (video_post_seq.nextval, #{codeNo}, #{userId}, #{titleEnglish}, #{titleKorean},
		#{director}, TO_DATE(#{releaseDate}, 'yyyy-mm-dd'), #{content}, #{videoFilePath}, #{rate})
	</insert>
	
	<!-- 영화 게시글 작성 -->
	<insert id="insertMovieVideo">
		INSERT INTO video_post(id, code_no, user_id, title_english, title_korean,
		director, actor, release_date, content, era_background, video_file_path, video_length, rate)
		VALUES (video_post_seq.nextval, #{codeNo}, #{userId}, #{titleEnglish}, #{titleKorean},
		#{director}, #{actor}, TO_DATE(#{releaseDate},'yyyy-mm-dd'), #{content},
		#{eraBackground}, #{videoFilePath}, #{videoLength}, #{rate})
	</insert>
	
	<!-- 총 영상 게시물 수 -->
	<select id="vp_count" resultType="int">
		SELECT COUNT(ID) FROM VIDEO_POST
		<where>
			<if test="findField == ''"></if>
			<if test="findField == 'all'">
				TITLE_ENGLISH LIKE #{findName} or TITLE_KOREAN LIKE #{findName} or DIRECTOR LIKE #{findName}
			</if>
			<if test="findField == 'title'">
				TITLE_ENGLISH LIKE #{findName} or TITLE_KOREAN LIKE #{findName}
			</if>
			<if test="findField == 'director'">
				DIRECTOR LIKE #{findName}
			</if>
		</where>
	</select>
	
	<!-- 영상 목록 -->
	<select id="vp_list" resultType="VideoPostVO">
		SELECT * FROM (SELECT ROWNUM rNum, ID, DIRECTOR, VIDEO_FILE_PATH, TITLE_ENGLISH, TITLE_KOREAN, USER_ID, 
		REGISTER_DATE, HIT, COMMENT_COUNT, MOVE_COUNT
		FROM (SELECT * FROM VIDEO_POST
		<where>
			<if test="findField == ''"></if>
			<if test="findField == 'all'">
				TITLE_ENGLISH LIKE #{findName} or TITLE_KOREAN LIKE #{findName} or DIRECTOR LIKE #{findName}
			</if>
			<if test="findField == 'title'">
				TITLE_ENGLISH LIKE #{findName} or TITLE_KOREAN LIKE #{findName}
			</if>
			<if test="findField == 'director'">
				DIRECTOR LIKE #{findName}
			</if>
		</where>
		ORDER BY ID DESC))
		WHERE rNum &gt;= #{startrow} and rNum &lt;= #{endrow}
	</select>
	
	<!-- 영상 내용보기 -->
	<select id="vp_cont" resultMap="videoPostInfo">
		SELECT 
		id, code_no, user_id, title_english, title_korean,
		director, actor, release_date, content, era_background, video_file_path, video_length, rate 
		FROM video_post
		WHERE ID=#{id}
	</select>
	
	
	<update id="vp_up">
		UPDATE VIDEO_POST
		SET DIRECTOR = #{director}, ACTOR = #{actor}, ERA_BACKGROUND = #{eraBackground}, CODE_NO = #{codeNo}, 
		RATE = #{rate}, VIDEO_LENGTH = #{videoLength}, TITLE_KOREAN = #{titleKorean}, TITLE_ENGLISH = #{titleEnglish}, 
		RELEASE_DATE = #{releaseDate}, CONTENT = #{content}, VIDEO_FILE_PATH = #{videoFilePath} WHERE ID = #{id}
	</update>
	
	<update id="vp_up2">
		UPDATE VIDEO_POST
		SET DIRECTOR = #{director}, CODE_NO = #{codeNo}, 
		RATE = #{rate}, TITLE_KOREAN = #{titleKorean}, TITLE_ENGLISH = #{titleEnglish}, 
		RELEASE_DATE = #{releaseDate}, CONTENT = #{content}, VIDEO_FILE_PATH = #{videoFilePath} WHERE ID = #{id}
	</update>
	
	<delete id="vp_del">
		DELETE FROM VIDEO_POST
		WHERE ID=#{id}
	</delete>
	<!-- 첨부파일 저장 -->
<!-- 	<insert id="insertVideoAttachedFile"> -->
<!-- 		INSERT INTO ATTACHED_FILE -->
<!-- 		(ID, FILE_PATH, THUMBNAIL_PATH, NO, VIDEO_POST_ID)  -->
<!-- 		VALUES  -->
<!-- 		(ATTACHED_FILE_SEQ.NEXTVAL, ) -->
		
<!-- 	</insert> -->
</mapper>