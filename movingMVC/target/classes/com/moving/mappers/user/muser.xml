<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mUser">
	<!-- 닉네임 중복체크 -->
	<select id="nickCheck" parameterType="java.lang.String" resultType="com.moving.domain.MUserVO"> 
							<!-- pType과 rType 생략가능 , pType String , rType MUserVO로 축약가능  --> 
		select * from m_user where nickname=#{nickname}
	</select>
	
	<!-- 이메일 중복체크 -->
	<select id="emailCheck" parameterType="java.lang.String" resultType="com.moving.domain.MUserVO"> 
							<!-- pType과 rType 생략가능 , pType String , rType MUserVO로 축약가능  --> 
		select * from m_user where email=#{userid}
	</select>
	
	<!-- 회원저장 -->
	<insert id="insertUser">
		insert into m_user (id,userid,name,nickname,email,password,phone,genre_01,genre_02,genre_03,profile_image_url)
		 values(m_user_seq.nextval,#{email},#{name},#{nickname},#{email},#{password},#{phone},#{genre01},#{genre02},#{genre03},'default')
	</insert>
	
	<!-- 비번찾기 > 회원정보검색 -->
	<select id="pwd_find" resultType="mUserVO">
		select * from m_user where email=#{email} and name=#{name} and user_status=1
	</select>
	
	<!-- 임시 비번수정 -->
	<update id="pwd_edit">
		update m_user set password=#{password}
		where email=#{email} and user_status=1
	</update>
	
	<!-- 이메일 아이디 찾기 > 회원정보 검색 -->
	<select id="email_find" resultType="mUserVO">
		select * from m_user where email=#{email} and user_status=1
	</select>
	
	<!-- 	로그인인증 -->
	<select id="login_check" resultType="mUserVO">
		select * from m_user where email=#{mLogin_email}
		and user_status=1
	</select>
	
	
	<!-- 사업자명 중복검색  -->
	<select id="check_businessName" parameterType="java.lang.String" resultType="com.moving.domain.MUserVO">
		select * from m_user where business_name=#{businessName}
	</select>
	
	<!-- 사업자 등록번호 중복검색 -->
	<select id="check_businessRegisterNo" parameterType="java.lang.String" resultType="com.moving.domain.MUserVO">
		select * from m_user where business_register_no=#{businessRegisterNo}
	</select>
	
	<!-- 비밀번호 수정 -->
	<update id="password_change" parameterType="mUserVO">
		update m_user set password=#{password} where userid=#{userid}
	</update>
	
	<!-- 회원탈퇴 -->
	<update id="member_delete">
		update m_user set user_status=0, deactivate_date=sysdate, deactivate_reason=#{deactivateReason} where userid=#{userid}
	</update>
	
	
	<!-- 회원전환 -->
	<update id="member_change" parameterType="mUserVO">
		update m_user set business_name=#{businessName}, user_lv=3, business_register_no=#{businessRegisterNo}, business_license_image_path=#{businessLicenseImagePath}
		 where userid=#{userid}
	</update>
	<!-- 이메일 중복체크 -->
	<select id="edit_emailCheck" parameterType="java.lang.String" resultType="com.moving.domain.MUserVO"> 
							<!-- pType과 rType 생략가능 , pType String , rType MUserVO로 축약가능  --> 
		select * from m_user where email=#{setting_email}
	</select>
	
	<!-- 휴대폰번호 변경 -->
	<update id="phone_change" parameterType="mUserVO">
		update m_user set phone=#{phone} where userid=#{userid}
	</update>
	
	<!-- id를 기준으로 소셜계정검색 -->
	<select id="findSocialAcount" resultType="socialProfileVO">
		select * from social_profile where user_id = #{id}
	</select>
	
	<!-- 포인트 충전 -->
	<update id="pointCharge">
		update m_user set user_point = user_point + #{userPoint} where userid = #{userid}
	</update>
	
	<!-- 회원정보창 비동기식 출력 -->
	<select id="test" resultType="java.util.Map">
		select id, nickname from m_user where userid=#{attribute}
	</select>
	
	<!-- 프로필사진 등록  -->
	<update id="profileImageUpload" parameterType="mUserVO">
		update m_user set profile_image_url = #{profileImageUrl} where userid=#{userid}
	</update>
	
	<!-- 회원 검색 -->
	<select id="selectUserInfo" resultType="mUserVO">
		select * from m_user where id=#{mid}
	</select>
	
	<!-- id를 기준으로 게시글갯수 -->
	<select id = "selectBoardCount" resultType="int">
	select sum(cnt) sum_count from
	(
	select count(id) cnt from normal_post where user_id = #{mid}
	UNION ALL
	select count(id) cnt from profile_post where user_id = #{mid}
	UNION ALL
	select count(id) cnt from reply_post where user_id = #{mid}
	UNION ALL
	select count(id) cnt from project_post where user_id = #{mid}
	)
	</select>
	
	<update id="socialProfileUpload">
		update social_profile set profile_image_path = #{profileImageUrl} where user_id = #{id}
	</update>
	
</mapper>



