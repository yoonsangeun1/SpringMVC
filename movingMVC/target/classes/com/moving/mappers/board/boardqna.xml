<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="BoardQna">

<resultMap type="replyPostVO" id="boardInfo" autoMapping="true">
		<id property="id" column="board_qna_id"/> <!-- board_free_id는 AS로 별칭을 지정해 준 것임. -->
		<result property="title" column="title" />
		<result property="userId" column="board_qna_user_id" />
		<result property="registerDate" column="board_qna_registerDate" />
		<result property="hit" column="hit" />
		<result property="content" column="content" />
		
			<association property="mUserVO" javaType="com.moving.domain.MUserVO"
			 autoMapping="true">
			</association>
			
			<association property="socialProfileVO" javaType="com.moving.domain.SocialProfileVO"
			 autoMapping="true">
			 <id property="id" column="social_profile_id"/>
			</association>
		
</resultMap>


<!-- 검색 저누,후 게시물 개수 -->
<select id="bq_count" resultType="int">
 SELECT COUNT(*) FROM REPLY_POST R
 <where>
 R.CODE_NO = 10006
 <if test="findField == ''"></if> <!-- 검색값이 없을 경우 -->
 <if test="findField == 'title'"> <!-- 검색조건이 제목인 경우 -->
 AND R.TITLE LIKE #{findName}
 </if>
 <if test="findField == 'content'"><!-- 검색조건이 내용인 경우 -->
 AND R.CONTENT LIKE #{findName}
 </if>
 <if test="findField == 'nickname'"><!-- 검색조건이 닉네임인 경우 -->
 AND R.USER_ID IN
 (SELECT U.ID FROM M_USER U
 WHERE U.nickname LIKE #{findName})
 </if>
 </where>
</select>

<!-- 페이징 + 목록보기 -->
<select id="bq_list" resultMap="boardInfo">
 SELECT * FROM
 (SELECT ROW_NUMBER() OVER(ORDER BY REPLY_STEP desc, REPLY_ORDER ASC) rNum,
 R.ID AS board_qna_id, R.TITLE, U.NICKNAME, S.ID AS social_profile_id,
 R.REGISTER_DATE AS board_qna_registerDate, R.HIT, R.REPLY_ORDER
 FROM REPLY_POST R
 LEFT OUTER JOIN M_USER U ON R.USER_ID = U.ID
 LEFT OUTER JOIN SOCIAL_PROFILE S ON U.ID = S.USER_ID
 <where>
 R.CODE_NO = 10006
 <if test="findField == ''"></if> <!-- 값이 없을 경우 -->
 <if test="findField == 'title'"> <!-- 검색 필드가 제목일 경우 -->
 AND R.TITLE LIKE #{findName}
 </if>
 <if test="findField == 'content'"><!-- 검색 필드가 내용일 경우 -->
 AND R.CONTENT LIKE #{findName}
 </if>
 <if test="findField == 'nickname'"><!-- 검색 필드가 닉네임일 경우 -->
 AND U.NICKNAME LIKE #{findName}
 </if>
 </where>
 ORDER BY REPLY_STEP desc, REPLY_ORDER ASC)
 WHERE rNum &gt;= #{startrow}
 AND rNum &lt;= #{endrow}
</select>

<!-- 질문 글쓰기 -->
<insert id="bq_in">
 INSERT INTO REPLY_POST (ID,USER_ID,TITLE,CONTENT,CODE_NO,REPLY_STEP,REPLY_ORDER)
 VALUES(reply_post_seq.nextval,#{userId},#{title},
 #{content},10006,reply_post_seq.nextval,0)
</insert>

<!-- 질문 내용보기 -->
<select id="bq_cont" resultMap="boardInfo">
 SELECT R.ID AS board_qna_id, R.USER_ID AS board_qna_user_id,
 R.TITLE, R.HIT, R.CONTENT, U.NICKNAME,
 R.REGISTER_DATE AS board_qna_registerDate,
 R.REPLY_ORDER
 FROM REPLY_POST R, M_USER U
 WHERE R.USER_ID = U.ID
 AND R.ID=#{id}
</select>

<!-- 조회수 증가 -->
<update id="bq_hit">
 UPDATE REPLY_POST
 SET HIT=HIT+1
 WHERE ID=#{id}
</update>

 <!-- 질문 내용가져오기 , 조회수 증가 없음 -->
<select id="bq_cont2" resultMap="boardInfo">
 SELECT R.ID AS board_qna_id, R.USER_ID AS board_qna_user_id,
 R.TITLE, R.HIT, R.CONTENT, U.NICKNAME,
 R.REPLY_ORDER
 FROM REPLY_POST R, M_USER U
 WHERE R.USER_ID = U.ID
 AND R.ID=#{id}
</select>

<!-- 질문 게시글 수정 -->
<update id="bq_edit">
UPDATE REPLY_POST
SET TITLE=#{title},
	CONTENT=#{content}
WHERE ID=#{id}
</update>

<!-- 질문 게시글 삭제 -->
<delete id="bq_del">
 DELETE FROM REPLY_POST
 WHERE ID=#{id}
</delete>

<!-- 답변 글쓰기 완료 -->
<insert id="bq_reply">
 INSERT INTO REPLY_POST (ID, USER_ID, TITLE,CONTENT,CODE_NO,
 REPLY_STEP, REPLY_ORDER)
 VALUES(reply_post_seq.nextval, #{userId}, #{title},
 #{content},10006,#{id},#{replyOrder}+2) 
</insert>

<!-- 답변 글쓰기 완료 시 질문글 reply_order +1 -->
<update id="bq_reply_order">
 UPDATE REPLY_POST
 SET REPLY_ORDER = REPLY_ORDER + 1
 WHERE ID =#{id}
</update>

<select id="bq_reply_select" resultType="int"> 
 SELECT Count(*) FROM REPLY_POST
 WHERE REPLY_ORDER &gt;= 1
 AND ID = #{id}
</select>

</mapper>



